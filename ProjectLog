6th October
-Github repository created.

17th October
-Keras and MNIST videos researched from LearnOnline.

21st October
-Added Ian as collaborator.

To do 21st October
-Watch pandas videos on LearnOnline

22nd October
-keras file uploaded from LearnOnline
-MNIST LearnOnline video watched and uploaded partially.
-MNIST video completed fully.

1st November
-Watched pandas/researched pages

3rd and 4th November
-Flask videos and referenced pages from LearnOnline currently being researched.

5th November
-Fixed up Github repository to have proper directories on all files.

6th November
-First Flask app up and running, prints "Hello World" from Localhost:5000.
-Adding comments and references to all work in each file, continuing with pandas databases exercises.

8th November
-Comments added to files and references.

11th November
-Creating .html file to run with the flask app and predict drawings of numbers.
-Uploaded .html file with refence to -> "https://bensonruan.com/handwritten-digit-recognition-with-tensorflow-js/", will update and make into own personal canvas

TO DO 12th November - 17th November
-Train models using MNIST dataset with keras and jupyter python packages. File is JS/html currently.

11th November 20:21pm onwards
-Using Jupyter Notebook to practice model training with keras imports etc.
-Get the image created in the Jupyter Notebook and somehow transfer it to the html application (through image saving) and get the Digit Recogniser to read the number in.

14th November
-Creating keras model that trains the neural network to recognise the handwritten digits in the drawingcanvas.html file.

15th November
-Installing pip on computer caused problems but solution is underway.
-Creating python file to run the model in.

16th November (Midnight)
-Installation not working for computer, going to run in Jupyter Notebook from here on.
-Files are working and the canvas reads the trained model and can predict numbers. -> Reference : https://github.com/bensonruan/Hand-Written-Digit-Recognition

16th November (Day)
-Uploaded model.json file and binary files that allow model to work for html page. 

----------------------------------- TO DO ----------------------------------------
- Update html file to have a nice front end.

- Comment all work and referenced properly.
----------------------------------------------------------------------------------

19th November
-Added stylesheet.css for styling on html webpage for nice user Front End.

TO DO -> Proper style for front end, get tensorflow converter working on college computers, comment all work properly.






